"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[640],{2974:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/vss-api-cli/intro","docId":"intro","unlisted":false},{"type":"link","label":"Project Architecture","href":"/vss-api-cli/architecture","docId":"architecture","unlisted":false},{"type":"category","label":"Commands","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"How to Create a Handler","href":"/vss-api-cli/commands/handler","docId":"commands/handler","unlisted":false},{"type":"link","label":"How to Create a Domain","href":"/vss-api-cli/commands/domain","docId":"commands/domain","unlisted":false},{"type":"link","label":"How to Create a Port","href":"/vss-api-cli/commands/port","docId":"commands/port","unlisted":false},{"type":"link","label":"How to Create a Service","href":"/vss-api-cli/commands/service","docId":"commands/service","unlisted":false},{"type":"link","label":"How to Create an Adapter","href":"/vss-api-cli/commands/adapter","docId":"commands/adapter","unlisted":false}],"href":"/vss-api-cli/category/commands"},{"type":"link","label":"How to Configure vss-api-cli","href":"/vss-api-cli/configuration","docId":"configuration","unlisted":false}]},"docs":{"architecture":{"id":"architecture","title":"Project Architecture","description":"This document outlines the typical project structure generated and encouraged by the vss-api-cli tool, following Hexagonal Architecture principles.","sidebar":"tutorialSidebar"},"commands/adapter":{"id":"commands/adapter","title":"How to Create an Adapter","description":"This guide explains how to use the vss-api-cli to generate an adapter for your project, following clean architecture principles.","sidebar":"tutorialSidebar"},"commands/domain":{"id":"commands/domain","title":"How to Create a Domain","description":"This guide explains how to use the vss-api-cli to generate a new domain with models, services, and ports, following clean architecture principles.","sidebar":"tutorialSidebar"},"commands/handler":{"id":"commands/handler","title":"How to Create a Handler","description":"This guide explains how to use the vss-api-cli to generate a new API handler with optional schema validation.","sidebar":"tutorialSidebar"},"commands/port":{"id":"commands/port","title":"How to Create a Port","description":"This guide explains how to use the vss-api-cli to generate a new port interface and its infrastructure adapter implementation.","sidebar":"tutorialSidebar"},"commands/service":{"id":"commands/service","title":"How to Create a Service","description":"This guide explains how to use the vss-api-cli to generate a new domain service.","sidebar":"tutorialSidebar"},"configuration":{"id":"configuration","title":"How to Configure vss-api-cli","description":"This guide explains how to customize the behavior of vss-api-cli using the vss-api.config.json file.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Introduction","description":"A CLI tool for scaffolding API projects with hexagonal architecture. This tool helps you quickly generate handlers, domains, ports, and services following clean architecture best practices.","sidebar":"tutorialSidebar"}}}}')}}]);